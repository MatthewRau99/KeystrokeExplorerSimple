export default function mapNodeNames(name: string) {
    switch(name) {
        case "RootContext":
            return "Root"
        case "File_inputContext":
            return "File_Input";
        case "StmtContext":
            return "Stmt";
        case "Testlist_star_exprContext":
            return "Testlist_star_expr";
        case "TestlistContext":
            return "Testlist"
        case "Logical_testContext":
            return "Logical_test";
        case "ComparisonContext":
            return "Comparison";
        case "ExprContext":
            return "Expr";
        case "Expr_stmtContext":
            return "Expr_stmt";
        case "AtomContext":
            return "Atom";
        case "NameContext":
            return "Name";
        case "ExprlistContext":
            return "Exprlist";
        case "ArgumentsContext":
            return "Arguments";
        case "TrailerContext":
            return "Trailer";
        case "ArgumentContext":
            return "Argument";
        case "NumberContext":
            return "Number";
        case "IntegerContext":
            return "Integer";
        case "Simple_stmtContext":
            return "Simple_stmt";
        case "SuiteContext":
            return "Suite";
        case "Assign_partContext":
            return "Assign_part";
        case "For_stmtContext":
            return "For_Stmt";
        case "TestContext":
            return "Test"
        case "FuncdefContext":
            return "Funcdef";
        case "ArglistContext":
            return "Arglist";
        case "Comp_forContext":
            return "Comp_For";
        case "Testlist_compContext":
            return "Testlist_Comp";
        case "Comp_iterContext":
            return "Comp_Iter";
        case "From_stmtContext":
            return "From_Stmt";
        case "Dotted_nameContext":
            return "Dotted_Name";
        case "If_stmtContext":
            return "If_Stmt";
        case "Else_clauseContext":
            return "Else_Clause";
        case "While_stmtContext":
            return "While_Stmt";
        case "Elif_clauseContext":
            return "Elif_Clause";
        case "Def_parametersContext":
            return "Def_Parameters";
        case "Def_parameterContext":
            return "Def_parameter";
        case "Import_stmtContext":
            return "Import_Stmt";
        case "Return_stmtContext":
            return "Return_Stmt";
        case "Class_or_func_def_stmtContext":
            return "Class_or_Func_Def_Stmt";
        case "Dotted_as_namesContext":
            return "Dotted_as_names";
        case "Dotted_as_nameContext":
            return "Dotted_as_name";
        case "Import_as_namesContext":
            return "Import_as_names";
        case "Import_as_nameContext":
            return "Import_as_name";
        case "TypedargslistContext":
            return "Typedargslist";
        case "Named_parameterContext":
            return "Named_parameter";
        case "Print_stmtContext":
            return "Print_Stmt";
        case "ClassdefContext":
            return "ClassDef";
    }
    // console.log(name);
    return name;
}

